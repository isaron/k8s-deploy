# Default values for sonarqube.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repository: sonarqube
  tag: 6.7.3
  # If using a private repository, the name of the imagePullSecret to use
  # pullSecret: my-repo-secret
service:
  name: sonarqube
  type: ClusterIP
  externalPort: 9000
  internalPort: 9000
  annotations:
  # May be used in example for internal load balancing in GCP:
  # cloud.google.com/load-balancer-type: Internal
  loadBalancerSourceRanges:
  - 0.0.0.0/0
  # loadBalancerIP: 1.2.3.4
ingress:
  enabled: true
  # Used to create an Ingress record.
  hosts:
    - sonar.ssii.com
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: ca-issuer
    ingress.kubernetes.io/ssl-redirect: "false"
    # kubernetes.io/tls-acme: "true"
    # This property allows for reports up to a certain size to be uploaded to SonarQube
    nginx.ingress.kubernetes.io/proxy-body-size: "8m"
  tls:
  # Secrets must be manually created in the namespace.
  - secretName: sonar-ingress-cert
    hosts:
      - sonar.ssii.com

# Affinity for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# Tolerations for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# Node labels for pod assignment
# Ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

# hostAliases allows the modification of the hosts file inside a container
hostAliases: []
# - ip: "192.168.1.10"
#   hostnames:
#   - "example.com"
#   - "www.example.com"

readinessProbe:
  initialDelaySeconds: 60
  periodSeconds: 30
  failureThreshold: 6
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 30

# Set extra env variables. Like proxy settings.
extraEnv: {}

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#  cpu: 100m
#  memory: 128Mi
# requests:
#  cpu: 100m
#  memory: 128Mi
persistence:
  enabled: true
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 10Gi

# List of plugins to install.
# For example:
plugins:
  install:
  #  - "https://github.com/AmadeusITGroup/sonar-stash/releases/download/1.5.0-rc1/sonar-stash-plugin-1.5.0-rc1.jar"
   - "https://github.com/SonarSource/sonar-ldap/releases/download/2.2-RC3/sonar-ldap-plugin-2.2.0.601.jar"
# plugins:
  # install: []
  # resources: {}
  resources:
  # We allow the plugins init container to have a separate resources declaration because
  # the initContainer does not take as much resources.
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

# A custom sonar.properties file can be provided using a multiline YAML string.
# For example:
sonarProperties: |
  # sonar.forceAuthentication=true
  # LDAP configuration
  # General Configuration
  sonar.security.realm=LDAP
  ldap.url=ldap://ldap.ssii.com:389
    
  # User Configuration
  ldap.user.baseDn=ou=users,dc=rdp,dc=dev
  ldap.user.request=(&(objectClass=inetOrgPerson)(uid={login}))
  ldap.user.realNameAttribute=cn
  ldap.user.emailAttribute=mail
  
  # Group Configuration
  ldap.group.baseDn=ou=realmRoles,dc=rdp,dc=dev
  ldap.group.request=(&(objectClass=groupOfNames)(member="uid=${login},ou=users,dc=rdp,dc=dev"))
  ldap.group.idAttribute=cn

## Configuration value to select database type
## Option to use "postgresql" or "mysql" database type, by default "postgresql" is chosen
## Set the "enable" field to true of the database type you select (if you want to use internal database) and false of the one you don't select
database:
  type: "postgresql"

## Configuration values for postgresql dependency
## ref: https://github.com/kubernetes/charts/blob/master/stable/postgresql/README.md
postgresql:
  # Enable to deploy the PostgreSQL chart
  enabled: false
  # To use an external PostgreSQL instance, set enabled to false and uncomment
  # the line below:
  postgresServer: "172.30.80.103"
  postgresUser: "sonaruser"
  postgresPassword: "p@ssw0rd"
  postgresDatabase: "sonardb"
  # Specify the TCP port that PostgreSQL should use
  service:
    port: 5432

## Configuration values for the mysql dependency
## ref: https://github.com/kubernetes/charts/blob/master/stable/mysql/README.md
##
mysql:
  # Enable to deploy the mySQL chart
  enabled: false
  # To use an external mySQL instance, set enabled to false and uncomment
  # the line below:
  # mysqlServer: ""
  mysqlUser: "sonarUser"
  mysqlPassword: "sonarPass"
  mysqlDatabase: "sonarDB"
  # mysqlParams:
  #   useSSL: "true"
  # Specify the TCP port that mySQL should use
  service:
    port: 3306
